from django.core.management.base import BaseCommand
from directories.models import (
    Directory, TechniqueModel, EngineModel, TransmissionModel,
    DriveAxleModel, SteerAxleModel, MaintenanceType,
    FailureNode, RecoveryMethod, ServiceCompany
)

class Command(BaseCommand):
    help = '–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞—Ö'

    def handle(self, *args, **options):
        self.stdout.write('üìö –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞—Ö:\n')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫
        directories_data = [
            ('–û–±—â–∏–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫', Directory),
            ('–ú–æ–¥–µ–ª–∏ —Ç–µ—Ö–Ω–∏–∫–∏', TechniqueModel),
            ('–ú–æ–¥–µ–ª–∏ –¥–≤–∏–≥–∞—Ç–µ–ª–µ–π', EngineModel),
            ('–ú–æ–¥–µ–ª–∏ —Ç—Ä–∞–Ω—Å–º–∏—Å—Å–∏–π', TransmissionModel),
            ('–ú–æ–¥–µ–ª–∏ –≤–µ–¥—É—â–∏—Ö –º–æ—Å—Ç–æ–≤', DriveAxleModel),
            ('–ú–æ–¥–µ–ª–∏ —É–ø—Ä–∞–≤–ª—è–µ–º—ã—Ö –º–æ—Å—Ç–æ–≤', SteerAxleModel),
            ('–¢–∏–ø—ã –¢–û', MaintenanceType),
            ('–£–∑–ª—ã –æ—Ç–∫–∞–∑–æ–≤', FailureNode),
            ('–°–ø–æ—Å–æ–±—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è', RecoveryMethod),
            ('–°–µ—Ä–≤–∏—Å–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏', ServiceCompany),
        ]
        
        total_empty = 0
        total_with_data = 0
        
        for name, model in directories_data:
            count = model.objects.count()
            if count == 0:
                self.stdout.write(f'‚ùå {name}: {count} –∑–∞–ø–∏—Å–µ–π (–ü–£–°–¢–û)')
                total_empty += 1
            else:
                self.stdout.write(f'‚úÖ {name}: {count} –∑–∞–ø–∏—Å–µ–π')
                total_with_data += 1
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –∑–∞–ø–∏—Å–∏
                first_records = model.objects.all()[:3]
                for record in first_records:
                    self.stdout.write(f'   - {record}')
                if count > 3:
                    self.stdout.write(f'   ... –∏ –µ—â–µ {count - 3} –∑–∞–ø–∏—Å–µ–π')
        
        self.stdout.write(f'\nüìä –ò–¢–û–ì–û:')
        self.stdout.write(f'  –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏: {total_with_data}')
        self.stdout.write(f'  –ü—É—Å—Ç—ã—Ö —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤: {total_empty}')
        
        if total_empty > 0:
            self.stdout.write(
                self.style.WARNING(
                    f'\n‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ {total_empty} –ø—É—Å—Ç—ã—Ö —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤!'
                    f'\n–î–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã load_excel_data_final'
                )
            )
            self.stdout.write(
                '\nüîß –î–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:'
                '\n1. python manage.py clear_database --confirm'
                '\n2. python manage.py load_excel_data_final silant_data.xlsx'
            )
        else:
            self.stdout.write(
                self.style.SUCCESS(
                    '\nüéâ –í—Å–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç –¥–∞–Ω–Ω—ã–µ!'
                )
            )
