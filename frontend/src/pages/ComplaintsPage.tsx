"use client"

import type React from "react"
import { useState, useEffect } from "react"
import { Plus, Edit } from "lucide-react"
import { complaintService, type Complaint } from "../services/api"
import { usePermissions } from "../hooks/usePermissions"
import PermissionButton from "../components/PermissionButton"
import styles from "../styles/DataPage.module.css"
import { usePageTitle } from "../hooks/usePageTitle"

interface ComplaintsPageProps {
  userRole?: string
  user?: any
}

const ComplaintsPage: React.FC<ComplaintsPageProps> = ({ user }) => {
  usePageTitle("–†–µ–∫–ª–∞–º–∞—Ü–∏–∏")
  const [complaints, setComplaints] = useState<Complaint[]>([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)

  // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
  const permissions = usePermissions(user)

  console.log("üîç ComplaintsPage - user:", user)
  console.log("üîç ComplaintsPage - permissions:", permissions)

  const fetchComplaints = async () => {
    setLoading(true)
    setError(null)
    try {
      const response = await complaintService.getAll()
      const data = response.data
      setComplaints(Array.isArray(data) ? data : data.results || [])
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –æ —Ä–µ–∫–ª–∞–º–∞—Ü–∏—è—Ö:", err)
      setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –æ —Ä–µ–∫–ª–∞–º–∞—Ü–∏—è—Ö")
    } finally {
      setLoading(false)
    }
  }

  useEffect(() => {
    if (permissions.canViewComplaints) {
      fetchComplaints()
    }
  }, [permissions.canViewComplaints])

  // –ï—Å–ª–∏ –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä
  if (!permissions.canViewComplaints) {
    return (
      <div className={styles.container}>
        <div className={styles.content}>
          <div style={{ textAlign: "center", padding: "60px 20px" }}>
            <h2>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–∫–ª–∞–º–∞—Ü–∏—è–º</h2>
            <p>–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –æ —Ä–µ–∫–ª–∞–º–∞—Ü–∏—è—Ö</p>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className={styles.container}>
      <div className={styles.content}>
        {/* Header */}
        <div className={styles.header}>
          <div className={styles.headerContent}>
            <div className={styles.headerIcon}>üìã</div>
            <div>
              <h1 className={styles.title}>–†–µ–∫–ª–∞–º–∞—Ü–∏–∏</h1>
              <p className={styles.subtitle}>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–∫–ª–∞–º–∞—Ü–∏—è—Ö –∏ –º–µ—Ç–æ–¥–∞—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è</p>
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º–∞—Ü–∏–∏ */}
          <div style={{ marginLeft: "auto" }}>
            <PermissionButton
              hasPermission={permissions.canCreateComplaint}
              onClick={() => console.log("–°–æ–∑–¥–∞—Ç—å —Ä–µ–∫–ª–∞–º–∞—Ü–∏—é")}
              variant="primary"
              tooltip="–î–æ–±–∞–≤–∏—Ç—å —Ä–µ–∫–ª–∞–º–∞—Ü–∏—é"
            >
              <Plus size={20} />
              –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–∫–ª–∞–º–∞—Ü–∏—é
            </PermissionButton>
          </div>
        </div>

        {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div
          style={{
            padding: "10px",
            backgroundColor: "#fef3c7",
            border: "1px solid #f59e0b",
            borderRadius: "6px",
            margin: "10px 0",
            fontSize: "12px",
          }}
        >
          <strong>üêõ –û—Ç–ª–∞–¥–∫–∞ –ø—Ä–∞–≤:</strong> canView: {permissions.canViewComplaints ? "‚úÖ" : "‚ùå"}, canCreate:{" "}
          {permissions.canCreateComplaint ? "‚úÖ" : "‚ùå"}
        </div>

        {/* Data Table */}
        <div className={styles.dataSection}>
          <div className={styles.dataHeader}>
            <div className={styles.dataTitle}>üìä –°–ø–∏—Å–æ–∫ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–π</div>
            <div className={styles.dataCount}>–ù–∞–π–¥–µ–Ω–æ: {complaints.length}</div>
          </div>

          <div className={styles.tableContainer}>
            {loading ? (
              <div className={styles.loadingState}>
                <div className={styles.loadingSpinner}></div>
                <p className={styles.loadingText}>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</p>
              </div>
            ) : error ? (
              <div className={styles.errorState}>
                <div className={styles.errorIcon}>‚ö†Ô∏è</div>
                <h3 className={styles.errorTitle}>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h3>
                <p className={styles.errorText}>{error}</p>
              </div>
            ) : complaints.length === 0 ? (
              <div className={styles.emptyState}>
                <div className={styles.emptyStateIcon}>üîç</div>
                <h3 className={styles.emptyStateTitle}>–†–µ–∫–ª–∞–º–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
                <p className={styles.emptyStateText}>–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π –æ —Ä–µ–∫–ª–∞–º–∞—Ü–∏—è—Ö</p>
              </div>
            ) : (
              <table className={styles.table}>
                <thead className={styles.tableHeader}>
                  <tr>
                    <th className={styles.tableHeaderCell}>–ú–∞—à–∏–Ω–∞</th>
                    <th className={styles.tableHeaderCell}>–î–∞—Ç–∞ –æ—Ç–∫–∞–∑–∞</th>
                    <th className={styles.tableHeaderCell}>–£–∑–µ–ª –æ—Ç–∫–∞–∑–∞</th>
                    <th className={styles.tableHeaderCell}>–°–ø–æ—Å–æ–± –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è</th>
                    <th className={styles.tableHeaderCell}>–í—Ä–µ–º—è –ø—Ä–æ—Å—Ç–æ—è</th>
                    {permissions.canEditComplaint && (
                      <th className={styles.tableHeaderCell} style={{ width: "120px" }}>
                        –î–µ–π—Å—Ç–≤–∏—è
                      </th>
                    )}
                  </tr>
                </thead>
                <tbody>
                  {complaints.map((complaint) => (
                    <tr key={complaint.id} className={styles.tableRow}>
                      <td className={`${styles.tableCell} ${styles.tableCellBold}`}>
                        {complaint.machine_serial || `ID: ${complaint.machine}`}
                      </td>
                      <td className={styles.tableCell}>
                        {complaint.failure_date ? new Date(complaint.failure_date).toLocaleDateString("ru-RU") : "‚Äî"}
                      </td>
                      <td className={styles.tableCell}>{complaint.failure_node?.name || "‚Äî"}</td>
                      <td className={styles.tableCell}>{complaint.recovery_method?.name || "‚Äî"}</td>
                      <td className={styles.tableCell}>{complaint.downtime ? `${complaint.downtime} –¥–Ω.` : "‚Äî"}</td>
                      {permissions.canEditComplaint && (
                        <td className={styles.tableCell}>
                          <PermissionButton
                            hasPermission={permissions.canEditComplaint}
                            onClick={() => console.log("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–ª–∞–º–∞—Ü–∏—é", complaint.id)}
                            variant="secondary"
                            size="small"
                            tooltip="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–ª–∞–º–∞—Ü–∏—é"
                          >
                            <Edit size={16} />
                          </PermissionButton>
                        </td>
                      )}
                    </tr>
                  ))}
                </tbody>
              </table>
            )}
          </div>
        </div>
      </div>
    </div>
  )
}

export default ComplaintsPage
