"use client"

import type React from "react"
import { useState } from "react"
import { Search, Filter, RotateCcw } from "lucide-react"
import styles from "../styles/HomePage.module.css"
import AuthService from "../services/AuthService"
import AuthTabsUpdated from "../components/AuthTabsUpdated"
import { machineService, type Machine } from "../services/api"
import { usePageTitle } from "../hooks/usePageTitle"

interface MachineFilters {
  search: string
  technique_model: string
  engine_model: string
  transmission_model: string
  drive_axle_model: string
  steer_axle_model: string
}

const HomePage: React.FC = () => {
  usePageTitle("–ì–ª–∞–≤–Ω–∞—è")
  const [machines, setMachines] = useState<Machine[]>([])
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState<string | null>(null)
  const [dataLoaded, setDataLoaded] = useState(false)

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const [filters, setFilters] = useState<MachineFilters>({
    search: "",
    technique_model: "",
    engine_model: "",
    transmission_model: "",
    drive_axle_model: "",
    steer_axle_model: "",
  })

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
  const [sortField, setSortField] = useState<keyof Machine>("serial_number")
  const [sortDirection, setSortDirection] = useState<"asc" | "desc">("asc")

  // –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—à–∏–Ω –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const fetchMachinesForGuests = async () => {
    setLoading(true)
    setError(null)
    try {
      const response = await machineService.getAll()
      const data = response.data
      const machinesArray = Array.isArray(data) ? data : data.results || []
      setMachines(machinesArray)
      setDataLoaded(true)
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–∞—à–∏–Ω:", err)
      setError("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö")
    } finally {
      setLoading(false)
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleFilterChange = (key: keyof MachineFilters, value: string) => {
    setFilters((prev) => ({ ...prev, [key]: value }))
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–∞
  const handleSearch = () => {
    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ filteredMachines
  }

  // –°–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleReset = () => {
    setFilters({
      search: "",
      technique_model: "",
      engine_model: "",
      transmission_model: "",
      drive_axle_model: "",
      steer_axle_model: "",
    })
  }

  // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–∞ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
  const handleSort = (field: keyof Machine) => {
    if (sortField === field) {
      setSortDirection(sortDirection === "asc" ? "desc" : "asc")
    } else {
      setSortField(field)
      setSortDirection("asc")
    }
  }

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Ç–∞–±–ª–∏—Ü—ã —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π
  const SortableHeader = ({ field, children }: { field: keyof Machine; children: React.ReactNode }) => (
    <th className={`${styles.tableHeaderCell} ${styles.sortableHeader}`} onClick={() => handleSort(field)}>
      <div className={styles.sortableHeaderContent}>
        {children}
        {sortField === field && <span className={styles.sortIndicator}>{sortDirection === "asc" ? "‚Üë" : "‚Üì"}</span>}
      </div>
    </th>
  )

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
  const filteredMachines = machines.filter((machine) => {
    const matchesSearch =
      !filters.search ||
      machine.serial_number.toLowerCase().includes(filters.search.toLowerCase()) ||
      machine.engine_serial.toLowerCase().includes(filters.search.toLowerCase())

    const matchesTechniqueModel =
      !filters.technique_model ||
      (machine.technique_model_name || "").toLowerCase().includes(filters.technique_model.toLowerCase())

    const matchesEngineModel =
      !filters.engine_model ||
      (machine.engine_model_name || "").toLowerCase().includes(filters.engine_model.toLowerCase())

    const matchesTransmissionModel =
      !filters.transmission_model ||
      (machine.transmission_model_name || "").toLowerCase().includes(filters.transmission_model.toLowerCase())

    const matchesDriveAxleModel =
      !filters.drive_axle_model ||
      (machine.drive_axle_model_name || "").toLowerCase().includes(filters.drive_axle_model.toLowerCase())

    const matchesSteerAxleModel =
      !filters.steer_axle_model ||
      (machine.steer_axle_model_name || "").toLowerCase().includes(filters.steer_axle_model.toLowerCase())

    return (
      matchesSearch &&
      matchesTechniqueModel &&
      matchesEngineModel &&
      matchesTransmissionModel &&
      matchesDriveAxleModel &&
      matchesSteerAxleModel
    )
  })

  // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  const sortedAndFilteredMachines = [...filteredMachines].sort((a, b) => {
    const aValue = a[sortField]
    const bValue = b[sortField]

    if (!aValue && !bValue) return 0
    if (!aValue) return 1
    if (!bValue) return -1

    let comparison = 0
    if (typeof aValue === "string" && typeof bValue === "string") {
      comparison = aValue.localeCompare(bValue)
    } else {
      comparison = String(aValue).localeCompare(String(bValue))
    }

    return sortDirection === "asc" ? comparison : -comparison
  })

  return (
    <div className={styles.container}>
      <AuthService>
        {({ user, logout }) => (
          <>
            {user ? (
              // –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
              <AuthTabsUpdated user={user} onLogout={logout} />
            ) : (
              // –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–º–ø–∞–∫—Ç–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
              <>
                {/* Hero Section */}
                <section className={styles.hero}>
                  <div className={styles.heroContent}>
                    <div className={styles.logoContainer}>
                      <img src="/images/Logo1.jpg" alt="–°–∏–ª–∞–Ω—Ç" className={styles.logo} />
                    </div>

                    <div className={styles.badge}>
                      <span style={{ marginRight: "8px" }}>‚ö°</span>
                      –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ç–µ—Ö–Ω–∏–∫–∏ –°–ò–õ–ê–ù–¢
                    </div>

                    <h1 className={styles.title}>
                      –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
                      <span className={styles.titleGradient}>–º–∞—à–∏–Ω –°–ò–õ–ê–ù–¢</span>
                    </h1>

                    <p className={styles.subtitle}>
                      –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤—ã–ø—É—â–µ–Ω–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π
                      –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å—Ç–∞–≤–∫–∞—Ö –∏ —Å–µ—Ä–≤–∏—Å–Ω–æ–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏.
                    </p>
                  </div>
                </section>
                {/* –°–µ–∫—Ü–∏—è —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –∏ —Ç–∞–±–ª–∏—Ü–µ–π */}
                <section className={styles.machinesSection}>
                  <div className={styles.machinesContainer}>
                    <div className={styles.machinesHeader}>
                      <h2 className={styles.machinesTitle}>üìä –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –º–∞—à–∏–Ω</h2>
                      <button className={styles.loadDataButton} onClick={fetchMachinesForGuests} disabled={loading}>
                        {loading ? "‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞..." : "üîÑ –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"}
                      </button>
                    </div>

                    {/* –§–∏–ª—å—Ç—Ä—ã - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã */}
                    {dataLoaded && (
                      <div className={styles.filtersSection}>
                        <h3 className={styles.filtersTitle}>
                          <Filter size={24} />
                          –§–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞
                        </h3>

                        <div className={styles.filtersGrid}>
                          <div className={styles.filterGroup}>
                            <label className={styles.filterLabel}>–ü–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É</label>
                            <input
                              type="text"
                              className={styles.filterInput}
                              placeholder="–°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä –º–∞—à–∏–Ω—ã –∏–ª–∏ –¥–≤–∏–≥–∞—Ç–µ–ª—è..."
                              value={filters.search}
                              onChange={(e) => handleFilterChange("search", e.target.value)}
                            />
                          </div>

                          <div className={styles.filterGroup}>
                            <label className={styles.filterLabel}>–ú–æ–¥–µ–ª—å —Ç–µ—Ö–Ω–∏–∫–∏</label>
                            <input
                              type="text"
                              className={styles.filterInput}
                              placeholder="–í–≤–µ–¥–∏—Ç–µ –º–æ–¥–µ–ª—å —Ç–µ—Ö–Ω–∏–∫–∏..."
                              value={filters.technique_model}
                              onChange={(e) => handleFilterChange("technique_model", e.target.value)}
                            />
                          </div>

                          <div className={styles.filterGroup}>
                            <label className={styles.filterLabel}>–ú–æ–¥–µ–ª—å –¥–≤–∏–≥–∞—Ç–µ–ª—è</label>
                            <input
                              type="text"
                              className={styles.filterInput}
                              placeholder="–í–≤–µ–¥–∏—Ç–µ –º–æ–¥–µ–ª—å –¥–≤–∏–≥–∞—Ç–µ–ª—è..."
                              value={filters.engine_model}
                              onChange={(e) => handleFilterChange("engine_model", e.target.value)}
                            />
                          </div>

                          <div className={styles.filterGroup}>
                            <label className={styles.filterLabel}>–ú–æ–¥–µ–ª—å —Ç—Ä–∞–Ω—Å–º–∏—Å—Å–∏–∏</label>
                            <input
                              type="text"
                              className={styles.filterInput}
                              placeholder="–í–≤–µ–¥–∏—Ç–µ –º–æ–¥–µ–ª—å —Ç—Ä–∞–Ω—Å–º–∏—Å—Å–∏–∏..."
                              value={filters.transmission_model}
                              onChange={(e) => handleFilterChange("transmission_model", e.target.value)}
                            />
                          </div>

                          <div className={styles.filterGroup}>
                            <label className={styles.filterLabel}>–ú–æ–¥–µ–ª—å –≤–µ–¥—É—â–µ–≥–æ –º–æ—Å—Ç–∞</label>
                            <input
                              type="text"
                              className={styles.filterInput}
                              placeholder="–í–≤–µ–¥–∏—Ç–µ –º–æ–¥–µ–ª—å –≤–µ–¥—É—â–µ–≥–æ –º–æ—Å—Ç–∞..."
                              value={filters.drive_axle_model}
                              onChange={(e) => handleFilterChange("drive_axle_model", e.target.value)}
                            />
                          </div>

                          <div className={styles.filterGroup}>
                            <label className={styles.filterLabel}>–ú–æ–¥–µ–ª—å —É–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ –º–æ—Å—Ç–∞</label>
                            <input
                              type="text"
                              className={styles.filterInput}
                              placeholder="–í–≤–µ–¥–∏—Ç–µ –º–æ–¥–µ–ª—å —É–ø—Ä–∞–≤–ª—è–µ–º–æ–≥–æ –º–æ—Å—Ç–∞..."
                              value={filters.steer_axle_model}
                              onChange={(e) => handleFilterChange("steer_axle_model", e.target.value)}
                            />
                          </div>
                        </div>

                        <div className={styles.filterButtons}>
                          <button className={styles.filterButtonPrimary} onClick={handleSearch}>
                            <Search size={20} />
                            –ù–∞–π—Ç–∏
                          </button>
                          <button className={styles.filterButtonSecondary} onClick={handleReset}>
                            <RotateCcw size={20} />
                            –°–±—Ä–æ—Å–∏—Ç—å
                          </button>
                        </div>
                      </div>
                    )}

                    <div className={styles.tableContainer}>
                      {loading ? (
                        <div className={styles.loadingState}>
                          <div className={styles.loadingSpinner}></div>
                          <p className={styles.loadingText}>–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫...</p>
                        </div>
                      ) : error ? (
                        <div className={styles.errorState}>
                          <div className={styles.errorIcon}>‚ö†Ô∏è</div>
                          <h3 className={styles.errorTitle}>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h3>
                          <p className={styles.errorText}>{error}</p>
                          <button className={styles.retryButton} onClick={fetchMachinesForGuests}>
                            üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
                          </button>
                        </div>
                      ) : !dataLoaded ? (
                        <div className={styles.emptyState}>
                          <div className={styles.emptyIcon}>üìã</div>
                          <h3 className={styles.emptyTitle}>–î–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã</h3>
                          <p className={styles.emptyText}>–ù–∞–∂–º–∏—Ç–µ "–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ" –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫</p>
                        </div>
                      ) : sortedAndFilteredMachines.length === 0 ? (
                        <div className={styles.emptyState}>
                          <div className={styles.emptyIcon}>üîç</div>
                          <h3 className={styles.emptyTitle}>–ú–∞—à–∏–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
                          <p className={styles.emptyText}>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ —Å–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</p>
                        </div>
                      ) : (
                        <div className={styles.tableWrapper}>
                          <table className={styles.machinesTable}>
                            <thead className={styles.tableHeader}>
                              <tr>
                                <SortableHeader field="serial_number">–°–µ—Ä–∏–π–Ω—ã–π ‚Ññ</SortableHeader>
                                <SortableHeader field="technique_model_name">–ú–æ–¥–µ–ª—å —Ç–µ—Ö–Ω–∏–∫–∏</SortableHeader>
                                <SortableHeader field="engine_model_name">–î–≤–∏–≥–∞—Ç–µ–ª—å</SortableHeader>
                                <SortableHeader field="transmission_model_name">–¢—Ä–∞–Ω—Å–º–∏—Å—Å–∏—è</SortableHeader>
                                <th className={styles.tableHeaderCell}>–ú–æ—Å—Ç—ã</th>
                              </tr>
                            </thead>
                            <tbody>
                              {sortedAndFilteredMachines.map((machine) => (
                                <tr key={machine.id} className={styles.tableRow}>
                                  <td className={`${styles.tableCell} ${styles.serialCell}`}>
                                    {machine.serial_number}
                                  </td>
                                  <td className={styles.tableCell}>
                                    {machine.technique_model?.name || machine.technique_model_name || "‚Äî"}
                                  </td>
                                  <td className={styles.tableCell}>
                                    <div className={styles.componentInfo}>
                                      <div className={styles.componentModel}>
                                        {machine.engine_model?.name || machine.engine_model_name || "‚Äî"}
                                      </div>
                                      <div className={styles.componentSerial}>‚Ññ {machine.engine_serial || "‚Äî"}</div>
                                    </div>
                                  </td>
                                  <td className={styles.tableCell}>
                                    <div className={styles.componentInfo}>
                                      <div className={styles.componentModel}>
                                        {machine.transmission_model?.name || machine.transmission_model_name || "‚Äî"}
                                      </div>
                                      <div className={styles.componentSerial}>
                                        ‚Ññ {machine.transmission_serial || "‚Äî"}
                                      </div>
                                    </div>
                                  </td>
                                  <td className={styles.tableCell}>
                                    <div className={styles.axlesInfo}>
                                      <div className={styles.axleItem}>
                                        <span className={styles.axleLabel}>–í–µ–¥—É—â–∏–π:</span>
                                        <div className={styles.axleDetails}>
                                          <div className={styles.componentModel}>
                                            {machine.drive_axle_model?.name || machine.drive_axle_model_name || "‚Äî"}
                                          </div>
                                          <div className={styles.componentSerial}>
                                            ‚Ññ {machine.drive_axle_serial || "‚Äî"}
                                          </div>
                                        </div>
                                      </div>
                                      <div className={styles.axleItem}>
                                        <span className={styles.axleLabel}>–£–ø—Ä–∞–≤–ª—è–µ–º—ã–π:</span>
                                        <div className={styles.axleDetails}>
                                          <div className={styles.componentModel}>
                                            {machine.steer_axle_model?.name || machine.steer_axle_model_name || "‚Äî"}
                                          </div>
                                          <div className={styles.componentSerial}>
                                            ‚Ññ {machine.steer_axle_serial || "‚Äî"}
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </td>
                                </tr>
                              ))}
                            </tbody>
                          </table>

                          <div className={styles.tableFooter}>
                            <div className={styles.tableInfo}>
                              <span className={styles.tableCount}>
                                –ù–∞–π–¥–µ–Ω–æ: {sortedAndFilteredMachines.length} –∏–∑ {machines.length} –º–∞—à–∏–Ω
                              </span>
                              <span className={styles.tableNote}>
                                –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É
                              </span>
                            </div>
                          </div>
                        </div>
                      )}
                    </div>
                  </div>
                </section>
              </>
            )}
          </>
        )}
      </AuthService>
    </div>
  )
}

export default HomePage
