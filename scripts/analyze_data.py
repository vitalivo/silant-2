import pandas as pd
import requests
from io import StringIO

def analyze_csv_data():
    """–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∏–∑ CSV —Ñ–∞–π–ª–æ–≤"""
    
    # URLs —Ñ–∞–π–ª–æ–≤
    urls = {
        'machines': 'https://hebbkx1anhila5yf.public.blob.vercel-storage.com/table1-szhyEKU1p7u1wb30XdntFriXNHzgoT.csv',
        'maintenance': 'https://hebbkx1anhila5yf.public.blob.vercel-storage.com/table2-MQCPe2lJageIdE12KZvCmDZaJAgEZr.csv',
        'complaints': 'https://hebbkx1anhila5yf.public.blob.vercel-storage.com/table3-TqiQ1BKsf9ZIxL3eVBdIbZ9jKuM1Un.csv'
    }
    
    data = {}
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª
    for name, url in urls.items():
        print(f"\nüìä –ê–Ω–∞–ª–∏–∑ —Ñ–∞–π–ª–∞: {name}")
        print("=" * 50)
        
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            response = requests.get(url)
            response.raise_for_status()
            
            # –ß–∏—Ç–∞–µ–º CSV
            df = pd.read_csv(StringIO(response.text))
            data[name] = df
            
            print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: {len(df)}")
            print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤: {len(df.columns)}")
            print("\n–°—Ç–æ–ª–±—Ü—ã:")
            for i, col in enumerate(df.columns):
                print(f"  {i}: '{col}'")
            
            print(f"\n–ü–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏:")
            print(df.head(3).to_string())
            
            # –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö
            if name == 'machines':
                print(f"\nüè≠ –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –º–∞—à–∏–Ω—ã:")
                if '–ó–∞–≤. ‚Ññ \n–º–∞—à–∏–Ω—ã' in df.columns:
                    unique_machines = df['–ó–∞–≤. ‚Ññ \n–º–∞—à–∏–Ω—ã'].nunique()
                    print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –º–∞—à–∏–Ω: {unique_machines}")
                    print(f"  –°–µ—Ä–∏–π–Ω—ã–µ –Ω–æ–º–µ—Ä–∞: {sorted(df['–ó–∞–≤. ‚Ññ \n–º–∞—à–∏–Ω—ã'].unique())}")
                
                if '–°–µ—Ä–≤–∏—Å–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è' in df.columns:
                    unique_services = df['–°–µ—Ä–≤–∏—Å–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è'].nunique()
                    print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–∏—Å–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π: {unique_services}")
                    print(f"  –°–µ—Ä–≤–∏—Å–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏: {df['–°–µ—Ä–≤–∏—Å–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è'].unique()}")
            
            elif name == 'maintenance':
                print(f"\nüîß –ê–Ω–∞–ª–∏–∑ –¢–û:")
                if '–í–∏–¥ –¢–û' in df.columns:
                    unique_types = df['–í–∏–¥ –¢–û'].nunique()
                    print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –≤–∏–¥–æ–≤ –¢–û: {unique_types}")
                    print(f"  –í–∏–¥—ã –¢–û: {df['–í–∏–¥ –¢–û'].unique()}")
                    
                    # –ü–æ–¥—Å—á–µ—Ç –ø–æ –≤–∏–¥–∞–º –¢–û
                    print(f"\n  –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –≤–∏–¥–∞–º –¢–û:")
                    maintenance_counts = df['–í–∏–¥ –¢–û'].value_counts()
                    for maintenance_type, count in maintenance_counts.items():
                        print(f"    {maintenance_type}: {count} –∑–∞–ø–∏—Å–µ–π")
                
                if '–ó–∞–≤. ‚Ññ –º–∞—à–∏–Ω—ã' in df.columns:
                    unique_machines_in_maintenance = df['–ó–∞–≤. ‚Ññ –º–∞—à–∏–Ω—ã'].nunique()
                    print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—à–∏–Ω —Å –¢–û: {unique_machines_in_maintenance}")
                    print(f"  –ú–∞—à–∏–Ω—ã: {sorted(df['–ó–∞–≤. ‚Ññ –º–∞—à–∏–Ω—ã'].unique())}")
            
            elif name == 'complaints':
                print(f"\n‚ö†Ô∏è –ê–Ω–∞–ª–∏–∑ —Ä–µ–∫–ª–∞–º–∞—Ü–∏–π:")
                if '–£–∑–µ–ª –æ—Ç–∫–∞–∑–∞' in df.columns:
                    unique_nodes = df['–£–∑–µ–ª –æ—Ç–∫–∞–∑–∞'].nunique()
                    print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —É–∑–ª–æ–≤ –æ—Ç–∫–∞–∑–∞: {unique_nodes}")
                    print(f"  –£–∑–ª—ã –æ—Ç–∫–∞–∑–∞: {df['–£–∑–µ–ª –æ—Ç–∫–∞–∑–∞'].unique()}")
                
                if '–ó–∞–≤. ‚Ññ –º–∞—à–∏–Ω—ã' in df.columns:
                    unique_machines_in_complaints = df['–ó–∞–≤. ‚Ññ –º–∞—à–∏–Ω—ã'].nunique()
                    print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—à–∏–Ω —Å —Ä–µ–∫–ª–∞–º–∞—Ü–∏—è–º–∏: {unique_machines_in_complaints}")
                    print(f"  –ú–∞—à–∏–Ω—ã: {sorted(df['–ó–∞–≤. ‚Ññ –º–∞—à–∏–Ω—ã'].unique())}")
        
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ {name}: {e}")
    
    # –°–≤–æ–¥–Ω—ã–π –∞–Ω–∞–ª–∏–∑
    print(f"\nüìà –°–í–û–î–ù–´–ô –ê–ù–ê–õ–ò–ó")
    print("=" * 50)
    
    if 'machines' in data and 'maintenance' in data and 'complaints' in data:
        machines_df = data['machines']
        maintenance_df = data['maintenance']
        complaints_df = data['complaints']
        
        print(f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π:")
        print(f"  –ú–∞—à–∏–Ω—ã: {len(machines_df)}")
        print(f"  –¢–û: {len(maintenance_df)}")
        print(f"  –†–µ–∫–ª–∞–º–∞—Ü–∏–∏: {len(complaints_df)}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –º–∞—à–∏–Ω
        if '–ó–∞–≤. ‚Ññ \n–º–∞—à–∏–Ω—ã' in machines_df.columns:
            machines_in_main = set(machines_df['–ó–∞–≤. ‚Ññ \n–º–∞—à–∏–Ω—ã'].astype(str))
        else:
            machines_in_main = set()
            
        if '–ó–∞–≤. ‚Ññ –º–∞—à–∏–Ω—ã' in maintenance_df.columns:
            machines_in_maintenance = set(maintenance_df['–ó–∞–≤. ‚Ññ –º–∞—à–∏–Ω—ã'].astype(str))
        else:
            machines_in_maintenance = set()
            
        if '–ó–∞–≤. ‚Ññ –º–∞—à–∏–Ω—ã' in complaints_df.columns:
            machines_in_complaints = set(complaints_df['–ó–∞–≤. ‚Ññ –º–∞—à–∏–Ω—ã'].astype(str))
        else:
            machines_in_complaints = set()
        
        print(f"\n–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –º–∞—à–∏–Ω:")
        print(f"  –ú–∞—à–∏–Ω—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ: {len(machines_in_main)}")
        print(f"  –ú–∞—à–∏–Ω—ã –≤ –¢–û: {len(machines_in_maintenance)}")
        print(f"  –ú–∞—à–∏–Ω—ã –≤ —Ä–µ–∫–ª–∞–º–∞—Ü–∏—è—Ö: {len(machines_in_complaints)}")
        
        # –ú–∞—à–∏–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ –¢–û, –Ω–æ –Ω–µ—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ
        missing_in_main = machines_in_maintenance - machines_in_main
        if missing_in_main:
            print(f"  ‚ö†Ô∏è –ú–∞—à–∏–Ω—ã –≤ –¢–û, –Ω–æ –Ω–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ: {missing_in_main}")
        
        # –ú–∞—à–∏–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ —Ä–µ–∫–ª–∞–º–∞—Ü–∏—è—Ö, –Ω–æ –Ω–µ—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ
        missing_complaints = machines_in_complaints - machines_in_main
        if missing_complaints:
            print(f"  ‚ö†Ô∏è –ú–∞—à–∏–Ω—ã –≤ —Ä–µ–∫–ª–∞–º–∞—Ü–∏—è—Ö, –Ω–æ –Ω–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ: {missing_complaints}")

if __name__ == "__main__":
    analyze_csv_data()
