#!/usr/bin/env python
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
"""
import os
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'silant_project.settings')
django.setup()

from django.apps import apps

def quick_check():
    print("‚ö° –ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–´")
    print("-" * 40)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
        Machine = apps.get_model('machines', 'Machine')
        Maintenance = apps.get_model('maintenance', 'Maintenance')
        Complaint = apps.get_model('complaints', 'Complaint')
        User = apps.get_model('accounts', 'User')
        
        # –ü–æ–¥—Å—á–µ—Ç –∑–∞–ø–∏—Å–µ–π
        machines = Machine.objects.count()
        maintenance = Maintenance.objects.count()
        complaints = Complaint.objects.count()
        users = User.objects.count()
        
        print(f"üöõ –ú–∞—à–∏–Ω—ã: {machines}")
        print(f"üîß –¢–û: {maintenance}")
        print(f"üìã –†–µ–∫–ª–∞–º–∞—Ü–∏–∏: {complaints}")
        print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {users}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
        directories = [
            'TechniqueModel', 'EngineModel', 'TransmissionModel',
            'DriveAxleModel', 'SteerAxleModel', 'MaintenanceType',
            'FailureNode', 'RecoveryMethod'
        ]
        
        print("\nüìö –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏:")
        for directory in directories:
            try:
                model = apps.get_model('directories', directory)
                count = model.objects.count()
                print(f"  {directory}: {count}")
            except:
                print(f"  {directory}: ‚ùå –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –û–±—â–∏–π —Å—Ç–∞—Ç—É—Å
        if machines > 0 and users > 0:
            print("\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ")
        else:
            print("\n‚ö†Ô∏è  –°–∏—Å—Ç–µ–º–∞ —Ç—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    quick_check()
